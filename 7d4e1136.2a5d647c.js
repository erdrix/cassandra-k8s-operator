(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),o=n(9),r=(n(0),n(182)),s={id:"3_cassandra_storage",title:"Cassandra storage",sidebar_label:"Cassandra storage"},i={id:"casskop/2_deployment_configuration/3_cassandra_storage",title:"Cassandra storage",description:"## Configuration",source:"@site/docs/casskop/2_deployment_configuration/3_cassandra_storage.md",permalink:"/casskop/docs/casskop/2_deployment_configuration/3_cassandra_storage",editUrl:"https://erdrix.github.io/casskop/edit/master/website/docs/casskop/2_deployment_configuration/3_cassandra_storage.md",sidebar_label:"Cassandra storage",sidebar:"docs",previous:{title:"Cassandra configuration",permalink:"/casskop/docs/casskop/2_deployment_configuration/2_cassandra_config"},next:{title:"Kubernetes objects",permalink:"/casskop/docs/casskop/2_deployment_configuration/4_kubernetest_object"}},c=[{value:"Configuration",id:"configuration",children:[]},{value:"Persistent volume claim",id:"persistent-volume-claim",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)("p",null,"Cassandra is a stateful application. It needs to store data on disks. CassKop allows you to configure the type of\nstorage you want to use."),Object(r.b)("p",null,"Storage can be configured using the ",Object(r.b)("inlineCode",{parentName:"p"},"storage")," property in ",Object(r.b)("inlineCode",{parentName:"p"},"CassandraCluster.spec")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Important:")," Once the Cassandra cluster is deployed, the storage cannot be changed.")),Object(r.b)("p",null,"Persistent storage uses Persistent Volume Claims to provision persistent volumes for storing data.\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"PersistentVolumes")," are acquired using a ",Object(r.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," which is managed by CassKop. The\n",Object(r.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," can use a ",Object(r.b)("inlineCode",{parentName:"p"},"StorageClass")," to trigger automatic volume provisioning."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"It is recommended to uses local-storage with quick ssd disk access for low latency. We have only tested the\n",Object(r.b)("inlineCode",{parentName:"p"},"local-storage")," storage class within CassKop.")),Object(r.b)("p",null,"CassandraCluster fragment of persistent storage definition :"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'# ...\n  dataCapacity: "300Gi"\n  dataStorageClass: "local-storage"\n  deletePVC: true\n# ...\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dataCapacity"),' (required): Defines the size of the persistent volume claim, for example, "1000Gi".'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dataStorageClass"),"(optional): Define the type of storage to uses (or use\ndefault one). We recommand to uses local-storage for better performances but\nit can be any storage with high ssd througput."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"deletePVC"),"(optional): Boolean value which specifies if the Persistent Volume Claim has to be deleted when the cluster\nis deleted. Default is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),".")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"WARNING"),": Resizing persistent storage for existing CassandraCluster is not currently supported. You must decide the\nnecessary storage size before deploying the cluster.")),Object(r.b)("p",null,"The above example asks that each nodes will have 300Gi of data volumes to persist the Cassandra data's using the\nlocal-storage storage class provider.\nThe parameter deletePVC is used to control if the data storage must persist when the according statefulset is deleted."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"WARNING:")," If we don't specify dataCapacity, then CassKop will uses the Docker Container ephemeral storage, and\nall data will be lost in case of a cassandra node reboot.")),Object(r.b)("h2",{id:"persistent-volume-claim"},"Persistent volume claim"),Object(r.b)("p",null,"When the persistent storage is used, it will create PersistentVolumeClaims with the following names:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"data-<cluster-name>-<dc-name>-<rack-name>-<idx>")),Object(r.b)("p",null,"Persistent Volume Claim for the volume used for storing data to the cluster ",Object(r.b)("inlineCode",{parentName:"p"},"<cluster-name>")," for the Cassandra DC\n",Object(r.b)("inlineCode",{parentName:"p"},"<dc-name>")," and the rack ",Object(r.b)("inlineCode",{parentName:"p"},"<rack-name>")," for the Pod with ID ",Object(r.b)("inlineCode",{parentName:"p"},"<idx>"),"."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"IMPORTANT"),": Note that with local-storage the PVC object makes a link between the Pod and the Node. While this\nobject is existing the Pod will be sticked to the node chosen by the scheduler. In the case you want to move the\nCassandra node to a new kubernetes node, you will need at some point to manually delete the associate PVC so that the\nscheduler can choose another Node for scheduling. This is cover in the Operation document.")))}p.isMDXComponent=!0},182:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,m=u["".concat(s,".").concat(b)]||u[b]||d[b]||r;return n?o.a.createElement(m,i({ref:t},l,{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);